#include <wx/wx.h>
#include "../pyutils.h"
#include "../functions.h"
#include "events.h"

void init_events(py::module & m)
{
	using namespace py::literals;


	// °´¼üÊÂ¼þ
	py::class_<wxEvent>(m, "Event")
		.def("Skip", &wxEvent::Skip, "skip"_a = true)
		.def_property("id", &wxEvent::GetId, &wxEvent::SetId);

	auto KeyEvent = py::class_<wxKeyEvent, wxEvent>(m, "KeyEvent")
		.def("GetKeyCode", &wxKeyEvent::GetKeyCode)
		.def("GetModifiers", [](wxKeyEvent &event) {return event.GetModifiers(); event.ResumePropagation(1); })
		.def("getWXK", [](wxKeyEvent &event, wxChar *keystr) {
		int ch = keystr[0];
		if ('a' <= ch && ch <= 'z')
		{
			return ch - 32;
		}
		else if (33 <= ch && ch <= 126) {
			return ch;
		}
		return 0;
	}).ptr();


#define ATTR_ACCEL(name) ATTR_INT(KeyEvent, name, wxACCEL_)
	ATTR_ACCEL(NORMAL),
		ATTR_ACCEL(ALT),
		ATTR_ACCEL(CTRL),
		ATTR_ACCEL(SHIFT),
		ATTR_ACCEL(RAW_CTRL),
		ATTR_ACCEL(CMD);
#undef ATTR_ACCEL

#define ATTR_KEYCODE(name) ATTR_INT(KeyEvent, name, WXK_)
	ATTR_KEYCODE(BACK),
		ATTR_KEYCODE(TAB),
		ATTR_KEYCODE(RETURN),
		ATTR_KEYCODE(ESCAPE),
		ATTR_KEYCODE(SPACE),
		ATTR_INT(KeyEvent, _DELETE, WXK),
		ATTR_KEYCODE(LBUTTON),
		ATTR_KEYCODE(RBUTTON),
		ATTR_KEYCODE(MBUTTON),
		ATTR_KEYCODE(SHIFT),
		ATTR_KEYCODE(ALT),
		ATTR_KEYCODE(CONTROL),
		ATTR_KEYCODE(END),
		ATTR_KEYCODE(HOME),
		ATTR_KEYCODE(LEFT),
		ATTR_KEYCODE(UP),
		ATTR_KEYCODE(RIGHT),
		ATTR_KEYCODE(DOWN),
		ATTR_KEYCODE(PRINT),
		ATTR_KEYCODE(INSERT),
		ATTR_KEYCODE(NUMPAD0), ATTR_KEYCODE(NUMPAD1), ATTR_KEYCODE(NUMPAD2), ATTR_KEYCODE(NUMPAD3), ATTR_KEYCODE(NUMPAD4), ATTR_KEYCODE(NUMPAD5),
		ATTR_KEYCODE(NUMPAD6), ATTR_KEYCODE(NUMPAD7), ATTR_KEYCODE(NUMPAD8), ATTR_KEYCODE(NUMPAD9),
		ATTR_KEYCODE(MULTIPLY),
		ATTR_KEYCODE(ADD),
		ATTR_KEYCODE(SEPARATOR),
		ATTR_KEYCODE(SUBTRACT),
		ATTR_KEYCODE(DECIMAL),
		ATTR_KEYCODE(DIVIDE),
		ATTR_KEYCODE(F1), ATTR_KEYCODE(F2), ATTR_KEYCODE(F3), ATTR_KEYCODE(F4), ATTR_KEYCODE(F5), ATTR_KEYCODE(F6),
		ATTR_KEYCODE(F7), ATTR_KEYCODE(F8), ATTR_KEYCODE(F9), ATTR_KEYCODE(F10), ATTR_KEYCODE(F11), ATTR_KEYCODE(F12),
		ATTR_KEYCODE(NUMLOCK),
		ATTR_KEYCODE(PAGEUP),
		ATTR_KEYCODE(PAGEDOWN),
		ATTR_KEYCODE(NUMPAD_ENTER),
		ATTR_KEYCODE(NUMPAD_HOME),
		ATTR_KEYCODE(NUMPAD_LEFT),
		ATTR_KEYCODE(NUMPAD_UP),
		ATTR_KEYCODE(NUMPAD_RIGHT),
		ATTR_KEYCODE(NUMPAD_DOWN),
		ATTR_KEYCODE(NUMPAD_PAGEUP),
		ATTR_KEYCODE(NUMPAD_PAGEDOWN),
		ATTR_KEYCODE(NUMPAD_END),
		ATTR_KEYCODE(NUMPAD_BEGIN),
		ATTR_KEYCODE(NUMPAD_INSERT),
		ATTR_KEYCODE(NUMPAD_DELETE),
		ATTR_KEYCODE(NUMPAD_EQUAL),
		ATTR_KEYCODE(NUMPAD_MULTIPLY),
		ATTR_KEYCODE(NUMPAD_ADD),
		ATTR_KEYCODE(NUMPAD_SEPARATOR),
		ATTR_KEYCODE(NUMPAD_SUBTRACT),
		ATTR_KEYCODE(NUMPAD_DECIMAL),
		ATTR_KEYCODE(NUMPAD_DIVIDE),
		ATTR_KEYCODE(WINDOWS_LEFT),
		ATTR_KEYCODE(WINDOWS_RIGHT),
		ATTR_KEYCODE(WINDOWS_MENU);
#undef ATTR_KEYCODE

}
